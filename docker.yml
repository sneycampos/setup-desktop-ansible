---
- name: Install Docker, Docker Compose and create a new user
  hosts: remote_servers
  become: true

  vars:
    docker_gpg_key_url: "https://download.docker.com/linux/ubuntu/gpg"
    docker_repo: "deb https://download.docker.com/linux/ubuntu focal stable"
    pub_key: "{{ lookup('file', pub_key_file) }}"

  tasks:
    - name: Validate not empty pub_key variable
      assert:
          that:
          - pub_key != ""
          fail_msg: "pub_key not found"
          success_msg: "pub_key is found"

    - name: Install required system packages
      ansible.builtin.apt:
        update_cache: true
        upgrade: dist
        cache_valid_time: 3600

    - name: Install apt-transport-https, ca-certificates, curl and software-properties-common
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      ansible.builtin.apt_key:
        url: "{{ docker_gpg_key_url }}"
        state: present

    - name: Add Docker Repository
      ansible.builtin.apt_repository:
        repo: "{{ docker_repo }}"
        state: present

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true

    - name: Install Docker CE
      ansible.builtin.apt:
        name: docker-ce
        state: latest

    - name: Install Docker Compose Plugin
      ansible.builtin.apt:
        name: docker-compose-plugin
        state: latest

    - name: Enable and start Docker services
      ansible.builtin.systemd:
        name: docker
        enabled: true
        state: started

    - name: Ensure group '{{ new_user }}' exists
      ansible.builtin.group:
        name: "{{ new_user }}"
        state: present

    - name: Ensure group 'sudo' exists
      ansible.builtin.group:
        name: sudo
        state: present

    - name: Ensure group 'docker' exists
      ansible.builtin.group:
        name: docker
        state: present

    - name: Ensure user '{{ new_user }}' exists
      ansible.builtin.user:
        name: "{{ new_user }}"
        password: "{{ 'password' | password_hash('sha512') }}"
        groups: [ "{{ new_user }}", sudo, docker ]
        state: present
        createhome: yes
        system: yes
        shell: /bin/bash

    - name: Ensure '{{ new_user }}' has .ssh directory
      ansible.builtin.file:
        path: /home/{{ new_user }}/.ssh
        state: directory
        owner: "{{ new_user }}"
        group: "{{ new_user }}"
        mode: '0700'

    - name: Ensure '{{ new_user }}' has .ssh/authorized_keys file
      ansible.builtin.file:
        path: /home/{{ new_user }}/.ssh/authorized_keys
        state: touch
        owner: "{{ new_user }}"
        group: "{{ new_user }}"
        mode: '0600'

    - name: Add public SSH key to authorized_keys
      authorized_key:
        user: "{{ new_user }}"
        state: present
        key: "{{ pub_key }}"
